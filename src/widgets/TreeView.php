<?php
/**
 * Created by PhpStorm.
 * User: bw_dev
 * Date: 10.12.2018
 * Time: 15:03
 */

namespace yozh\widget\widgets;

use Yii;
use yii\base\InvalidConfigException;
use yii\base\Model;
use yii\helpers\Html;
use yozh\widget\AssetBundle;

class TreeView extends DetailView
{
	const TEMPLATE = '<li {contentOptions}>{icon}<label {labelOptions}>{label}</label><span {valueOptions}>{value}</span></li>';
	
	public $widgetClass = 'yozh-widget-tree-view';
	
	public $tag = 'ul';
	
	public $collapsed = true;
	
	public $onIcon = '<i class="glyphicon glyphicon-minus"></i>';
	
	public $offIcon = '<i class="glyphicon glyphicon-plus"></i>';
	
	public $options;
	
	public function init()
	{
		$this->options = $this->options ?? [
			'class' => '',
		];
		
		parent::init(); // TODO: Change the autogenerated stub
		
		//$this->formatter->nullDisplay = '';
		
		/*
		if( !isset($this->options['valueOptions']['collapsed']) ){
			$this->options['valueOptions']['collapsed'] = (bool)$this->collapsed;
		}
		else{
			$this->options['valueOptions']['collapsed'] = (bool)$this->options['valueOptions']['collapsed'];
		}
		*/
	}
	
	
	protected function _renderAttribute( $Model, $attribute, $key, $index, $options = null )
	{
		$attribute['valueOptions'] = $attribute['valueOptions'] ?? $this->valueOptions ?? [];
		
		$attribute['collapsed'] = $attribute['collapsed'] ?? $this->collapsed;
		
		if( is_iterable( $attribute['value'] ) ) {
			
			if ( (bool)$attribute['collapsed'] ){
				$attribute['icon'] = $attribute['icon'] ?? $this->offIcon;
				Html::addCssClass( $attribute['valueOptions'], 'yozh-off' );
			}
			else{
				$attribute['icon'] = $attribute['icon'] ?? $this->onIcon;
				Html::addCssClass( $attribute['valueOptions'], 'yozh-on' );
			}
			
		}
		else{
			$attribute['icon'] = $attribute['icon'] ?? $this->onIcon;
		}
		
		
		/*
		$attribute['labelOptions'] = $attribute['labelOptions'] ?? [];
		Html::addCssClass( $attribute['labelOptions'], 'label' );
		
		$attribute['contentOptions'] = $attribute['contentOptions'] ?? [];
		Html::addCssClass( $attribute['contentOptions'], 'content' );
		
		$value = $attribute['value'] ?? null;
		
		if( $value instanceof \Closure ) {
			$attribute['value'] = call_user_func( $value, $Model, $attribute, $key, $index, $this );
		}
		
		if( !isset($attribute['label']) ){
			
			if ( is_numeric($key) && !is_array($attribute['value'])){
				$attribute['label'] = $attribute['value'];
			}
			else{
				$attribute['label'] = $key;
			}
			
		}
		
		if ( !is_array($attribute['value'])) {
			$attribute['value'] = null;
		}
		*/
		
		return parent::_renderAttribute( $Model, $attribute, $key, $index, $options );
	}
	
}